.container.container-body style="padding-top:20px;"
  .col-md-2
  .col-md-8
    .row
      .col-md-3
      .col-md-6
        h3 style=("color:white; text-align: center")  Create Your Service In JalaOn,
        hr.colorgraph/
        - if @has_service_category == false
          h4 style=("color:white; text-align: center") Choose Your Category Service
    .row
      - if @has_service_category == false
        .col-md-3
        .col-md-6
        .tab-content style="border: none !important; text-align: center; background: transparent !important;"
          #men.tab-pane.active
            ul.nav-list.list-inline
              li
                = link_to new_service_path(service_category_id: "1", name: nil), method: :get
                  img src="/assets/makanan_minuman.png" style="width: 80px;" /
                  p style="text-align: center; color:white !important;" Makanan Dan Minuman
              li
                = link_to new_service_path(service_category_id: "2", name: nil), method: :get
                  img src="http://content.nike.com/content/dam/one-nike/globalAssets/menu_header_images/OneNike_Global_Nav_Icons_Basketball.png"
                  p style="text-align: center; color:white !important;" Transportasi
              li
                = link_to new_service_path(service_category_id: "3", name: nil), method: :get
                  img src="http://content.nike.com/content/dam/one-nike/globalAssets/menu_header_images/OneNike_Global_Nav_Icons_Football.png" /
                  p style="text-align: center; color:white !important;" Les Private
              li
                = link_to new_service_path(service_category_id: "4", name: nil), method: :get
                  img src="http://content.nike.com/content/dam/one-nike/globalAssets/menu_header_images/OneNike_Global_Nav_Icons_Soccer.png" /
                  p style="text-align: center; color:white !important;" Rumah Tangga
              li
                = link_to new_service_path(service_category_id: "5", name: nil), method: :get
                  img src="http://content.nike.com/content/dam/one-nike/globalAssets/menu_header_images/OneNike_Global_Nav_Icons_MensTraining.png"
                  p style="text-align: center; color:white !important;" Reparasi
              li
                = link_to new_service_path(service_category_id: "6", name: nil), method: :get
                  img src="http://content.nike.com/content/dam/one-nike/globalAssets/menu_header_images/OneNike_Global_Nav_Icons_WomensTraining.png"
                  p style="text-align: center; color:white !important;" Kesehatan
              li
                = link_to new_service_path(service_category_id: "7", name: nil), method: :get
                  img src="http://content.nike.com/content/dam/one-nike/globalAssets/menu_header_images/OneNike_Global_Nav_Icons_WomensTraining.png"
                  p style="text-align: center; color:white !important;" Bahasa
      - else
          .row
            .col-md-2
            .col-md-8
              = form_for @service, :html => {:multipart => true} do |f|  
                - if @service.errors.any?
                  #error_explanation
                    h2 = "#{pluralize(@service.errors.count, "error")} prohibited this service_category from being saved:"
                    ul
                      - @service.errors.full_messages.each do |message|
                        li = message
                .row
                  .col-xs-12.col-sm-12.col-md-12
                    .form-groups.image-box
                      - if @service.avatar
                        = image_tag(@service.avatar.large_avatar, :class => "image-edit")
                  .col-xs-12.col-sm-12.col-md-12      
                    .form-group
                      = f.label "Title Service *", :class=>"label-white"
                      = f.text_field :title, autofocus: true, :class=>"form-control input-lg", :id=>"first_name", :placeholder=>"Title Your Service"
                  .col-xs-12.col-sm-12.col-md-12
                    .form-group
                      = f.label "Description Service *", :class=>"label-white"
                      = f.text_area :description, :class=>"form-control input-lg", :id=>"last_name", :placeholder=>"Description Your Service", rows: "3"
                  .col-xs-12.col-sm-12.col-md-12
                    .form-group
                      = f.label "lokasi service *"
                      = f.text_field :address, placeholder: '..', class: "form-control twitter-typeahead tt-input form-input width-100 jualo-search seachtext"
                      = link_to "Auto Detect Location", "javascript:void(0)", class: "detect"
                    .details
                      = f.hidden_field :latitude, "data-geo" => "lat"
                      = f.hidden_field :longitude, "data-geo" => "lng"
                  .col-xs-12.col-sm-12.col-md-12
                    .form-group
                      = f.label "Logo Service *", :class=>"label-white"
                      = f.file_field :avatar, :class=>"form-control input-lg", :id=>"last_name"
                  .col-xs-12.col-sm-12.col-md-12.label-white
                    = f.hidden_field :service_category_id
                    = f.fields_for :properties, OpenStruct.new(@service.properties) do |builder|
                      - @service.service_category.fields.sort.each do |field|
                        - if field.name != "Jarak Delivery (Km)"
                          = render "services/fields/#{field.field_type}", field: field, f: builder
                        - else 
                          #km
                            = render "services/fields/#{field.field_type}", field: field, f: builder
                  .col-xs-12.col-sm-12.col-md-12.label-white
                    br/
                    = f.fields_for :product_services do |builder|
                      = render 'field_product', f: builder
                    = link_to_add_fields_products "Add product", f, :product_services
                  
                hr.colorgraph/
                .row
                  .col-xs-12.col-md-6
                    = f.submit "Submit", :class=>"btn btn-primary btn-block btn-lg"

= content_for :js_place
  = javascript_include_tag 'http://maps.googleapis.com/maps/api/js?libraries=places&sensor=false'
  = javascript_include_tag 'jquery.geocomplete.js'

javascript: 
  $(document).ready(function(){
    if ($('#service_properties_Delivery').length == 1){
      if ($('#service_properties_Delivery')[0].checked == true) {
        $('#km').show();
      }else{
        $('#km').hide();
      }

      $("#service_properties_Delivery").change(function() {
        if ($('#service_properties_Delivery')[0].checked == true) {
          $('#km').show();
        }else{
          $('#km').hide();
        }
      })
    }else{
      if (document.getElementById('service_properties_OutSide Service').checked == true) {
        $('#km').show();
      }else{
        $('#km').hide();
      }
      document.getElementById('service_properties_OutSide Service').addEventListener('change', function(){
        if (document.getElementById('service_properties_OutSide Service').checked == true) {
          $('#km').show();
        }else{
          $('#km').hide();
        }
      })
    }
  });

  $(document).ready(function(){
    function showPosition(position) {
      var latlng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
      var geocoder = new google.maps.Geocoder();
      geocoder.geocode({ 'latLng': latlng }, function (results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
            if (results[1]) {
                console.log(a=results)
                $('.seachtext').val(results[0].formatted_address)
            }
        }
      });
    }

    function showError(error) {
      switch(error.code) {
        case error.PERMISSION_DENIED:
          $('#myModal').modal('toggle');
          break;
        case error.POSITION_UNAVAILABLE:
          bootstrap_alert.warning('Location information is unavailable.');
          break;
        case error.TIMEOUT:
          bootstrap_alert.warning('The request to get user location timed out.');          
          break;
        case error.UNKNOWN_ERROR:
          bootstrap_alert.warning('An unknown error occurred.');
          break;
      }
    }

    $(".detect").click(function(){
      if (navigator.geolocation) {
        var optn = {
          enableHighAccuracy : true,
          timeout : Infinity,
          maximumAge : 0
        };
        navigator.geolocation.getCurrentPosition(showPosition, showError, optn);
      } else {
        alert('Geolocation is not supported in your browser');
      }
    })
    $(".seachtext").geocomplete({
      details: ".details",
      detailsAttribute: "data-geo"
    });
  });
